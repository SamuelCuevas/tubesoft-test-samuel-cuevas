{"version":3,"sources":["components/Buttons.js","components/Counter.js","helpers/fetch.js","App.js","index.js"],"names":["Buttons","start","status","pause","stop","resume","clickAlert","className","onClick","Counter","time","h","m","s","ms","fetchSaved","data","method","url","fetch","headers","body","JSON","stringify","alert","handleFetch","a","t","resp","json","console","log","ok","Swal","fire","App","useState","setTime","interv","setInterv","setStatus","updatedMs","updatedS","updatedM","updatedH","run","setInterval","clearInterval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0f914c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Buttons({ start, status, pause, stop, resume, clickAlert }) {\r\n\r\n  return (\r\n      <div className=\"buttons\">\r\n          { (status === 0)? \r\n            <button onClick={ start }>Start</button>\r\n            : <button onClick={ resume }>Resume</button>\r\n          }\r\n          \r\n          { (status === 1 )?\r\n              <button onClick={ pause }>Pause</button>\r\n            : <button>Pause</button>\r\n          }\r\n\r\n          { (status === 1 || status === 2)?\r\n            <button onClick={ stop }>Stop</button>\r\n            : <button>Stop</button>\r\n          }\r\n          \r\n      </div>\r\n  );\r\n}\r\nexport default Buttons;","import React from 'react';\r\n\r\n\r\nfunction Counter({ time }) {\r\n\r\n  const h = () => {\r\n    if(time.h === 0){\r\n      return '';\r\n    }else {\r\n      return <span>{ (time.h >= 10 )? time.h : \"0\"+ time.h }:</span>\r\n    }\r\n }\r\n\r\n  return (\r\n      <div>\r\n          {h()}\r\n          <span>{ (time.m >= 10 )? time.m : \"0\"+ time.m }:</span>\r\n          <span>{ (time.s >= 10 )? time.s : \"0\"+ time.s }:</span>\r\n          <span>{ (time.ms >= 10 )? time.ms : \"0\"+ time.ms } </span>\r\n      </div>\r\n  );\r\n}\r\nexport default Counter;","import Swal from 'sweetalert2'\r\n\r\nconst fetchSaved = ( data, method = 'POST' ) => {\r\n\r\n    const url = 'https://tubesoft-backend.herokuapp.com/chronometer/new';\r\n    if( method === 'POST' ) {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n\r\n    } else {\r\n        alert('An error has ocurred');\r\n    }\r\n\r\n}\r\n\r\nconst handleFetch = async (h,m,s,ms) => {\r\n    const t = `${h}:${m}:${s}:${ms}`;\r\n    const resp = await fetchSaved({\r\n      time: t\r\n    });\r\n    const body = await resp.json();\r\n    console.log(body);\r\n    if( body.ok ){\r\n      Swal.fire( 'Success', `Time: ${ t }, has successfully registered`);\r\n    }\r\n}\r\n\r\nexport {\r\n    handleFetch\r\n}","import { useState } from 'react';\nimport Buttons from './components/Buttons';\nimport Counter from './components/Counter';\nimport { handleFetch } from './helpers/fetch';\n\nimport './App.css';\n\nfunction App() {\n\n  const [time, setTime] = useState({ ms:0, s:0, m:0, h:0 });\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState(0);\n  let { ms, s, m, h } = time;\n\n  const handleStart = () => {\n    run();\n    setInterv(setInterval( run, 10 ));\n    setStatus(1);\n  };\n\n  const handleResume = () => {\n    if( status === 2 ){ \n        run();\n        setInterv(setInterval( run, 10 ));\n        setStatus(1);\n    }\n  };\n\n  const handleStop = () => {\n    handleFetch(h,m,s,ms);\n    clearInterval( interv );\n    setStatus(0);\n    setTime({ ms:0, s:0, m:0, h:0 });\n  };\n\n  const handlePause = () => {\n    clearInterval( interv );\n    setStatus(2);\n  };\n\n  let updatedMs = ms, updatedS = s, updatedM = m, updatedH = h;\n\n  const run = () => {\n\n    if( updatedM === 60 ) {\n        updatedH++;\n        updatedM = 0;\n    }\n\n    if( updatedS === 60 ) {\n        updatedM++;\n        updatedS = 0;\n    }\n\n    if( updatedMs === 100 ) {\n        updatedS++;\n        updatedMs = 0;\n    }\n\n    updatedMs++;\n    return setTime({ ms:updatedMs, s:updatedS, m:updatedM, h:updatedH });\n\n  };\n\n  return (\n      <div className=\"App\">\n          <div className=\"time\">\n              <div className=\"chronometer\">\n                  <Counter time={ time } />\n                  <Buttons status={ status } start={ handleStart } stop={ handleStop } pause={ handlePause } resume={ handleResume } />\n              </div>\n          </div>\n      </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}